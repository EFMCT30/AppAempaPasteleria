@{
    ViewData["Title"] = "Home Page";
}

<div class="row mt-2">

    <div class="col-sm-6">
        <div class="card">
            <div class="card-header" style="text-align:center">Ventas ultimos 5 días </div>
            <div class="card-body">
                <canvas id="chartVentas" style="max-height:200px"></canvas>
            </div>
        </div>
    </div>

    <div class="col-sm-6">
        <div class="card">
            <div class="card-header" style="text-align:center">Productos mayor vendidos </div>
            <div class="card-body">
                <canvas id="chartProductos" style="max-height:200px"></canvas>
            </div>
        </div>
    </div>

    <div class="col-12 mt-2">
        <div class="card">
            <div class="card-header" style="text-align:center">Resumen de Venta por Cliente</div>
            <div class="card-body">
                <canvas id="chartClientes" style="max-height:200px"></canvas>
            </div>
        </div>
    </div>

</div>

@section Scripts{

    <script>
        function resumenVenta() {

            fetch("resumenVenta")
                .then((response) => {
                    return response.ok ? response.json() : Promise.reject(response);
                })
                .then((dataJson) => {
                    const labels = dataJson.map((item) => {
                        const fecha = new Date(item.fecha);
                        return fecha.toLocaleDateString('es-ES', { year: '2-digit', month: '2-digit', day: '2-digit' });
                    })
                    const values = dataJson.map((item) => { return item.totalPedidos })
                    const backgroundColors = ['rgb(54, 162, 235)', 'rgb(255, 99, 132)', 'rgb(75, 192, 192)', 'rgb(255, 205, 86)', 'rgb(153, 102, 255)'];
                    const data = {
                        labels: labels,
                        datasets: [{
                            label: 'TotalPedidos',
                            data: values,
                            backgroundColor: backgroundColors.slice(0, values.length),
                            borderWidth: 1
                        }]
                    };
                    const config = {
                        type: 'bar',
                        data: data,
                        options: {
                            scales: {
                                y: {
                                    beginAtZero: true
                                }
                            }
                        },
                    };
                    const canvasBarras = document.getElementById("chartVentas");
                    const graficoBarras = new Chart(canvasBarras, config)

                }).catch((error) => {
                    console.log("error")

                })

        }

        function resumenProducto() {

            fetch("resumenProducto")
                .then((response) => {
                    return response.ok ? response.json() : Promise.reject(response);
                })
                .then((dataJson) => {


                    const labels = dataJson.map((item) => { return item.nomProd })
                    const values = dataJson.map((item) => { return item.stockProd })
                    const data = {
                        labels: labels,
                        datasets: [{
                            label: 'Cantidad',
                            data: values,
                            backgroundColor: [
                                'rgb(255, 99, 132)',
                                'rgb(54, 162, 235)',
                                'rgb(255, 205, 86)',
                                "#01AF40"
                            ],
                            hoverOffset: 4
                        }]
                    };
                    const config = {
                        type: 'doughnut',
                        data: data,
                    };
                    const canvasDona = document.getElementById("chartProductos");
                    const graficoDona = new Chart(canvasDona, config)

                }).catch((error) => {
                    console.log("error")

                })

        }

        function resumenVentaxCli() {

            fetch("resumenVentaxCli")
                .then((response) => {
                    return response.ok ? response.json() : Promise.reject(response);
                })
                .then((dataJson) => {

                    const labels = dataJson.map((item) => { return item.nomCli })
                    const values = dataJson.map((item) => { return item.totalPedidos })
                    const backgroundColors = ['rgb(54, 162, 235)', 'rgb(255, 99, 132)', 'rgb(75, 192, 192)', 'rgb(255, 205, 86)', 'rgb(153, 102, 255)'];
                    const data = {
                        labels: labels,
                        datasets: [{
                            label: 'TotalPedidos',
                            data: values,
                            backgroundColor: backgroundColors.slice(0, values.length),
                            borderWidth: 1
                        }]
                    };
                    const config = {
                        type: 'bar',
                        data: data,
                        options: {
                            scales: {
                                y: {
                                    beginAtZero: true
                                }
                            }
                        },
                    };
                    const canvasBarras = document.getElementById("chartClientes");
                    const graficoBarras = new Chart(canvasBarras, config)

                }).catch((error) => {
                    console.log("error")

                })

        }


        function cargarGraficos() {
            resumenVenta();
            resumenProducto();
            resumenVentaxCli();
        }

        $(document).ready(() => {
            cargarGraficos();
        });

        $(document).ajaxComplete(() => {
            cargarGraficos();
        });

    </script>

}